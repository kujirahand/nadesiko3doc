■数値について

なでしこでは、数値を表すのに、16とか256などのような整数表現や3.14のような実数表現が可能です。

その他に、コンピューターでの計算に便利な、16進数/8進数/2進数の表現が可能です。巨大な数値を扱うのに便利なBigInt記法もサポートしています。また、数値の後ろに単位の指定も可能です。

●N進数表現について

▲16進数表現(0xXX)

以下のような数値表現が可能です。0xXXのように記述すると16進数を表します。

{{{#nako3
0xFFを表示。# → 255
0x1Fを表示。# → 31
0x55を表示。# → 85
}}}

▲8進数(0oXX)と2進数(0bXXXX)表現

0oXXのように記述すると8進数を表します。0bXXXXのように記述すると2進数を表します。

{{{#nako3
0o666を表示。# 👉438
0b11111111を表示。# 👉255
}}}

{{{#column
- (参考) [[plugin_system/進数変換]] ... 10進数をN進数に変換する命令があります
}}}

●単位について

数値の後に単位を付けて記述できます。

▲単位の指定について 

数値の後ろに単位の指定が可能です。単位は基本的に無視されて数値として扱われます。([[詳細 #994:https://github.com/kujirahand/nadesiko3/issues/994]])

{{{
(円|ドル|元|歩|㎡|坪|度|℃|°|個|つ|本|冊|才|歳|匹|枚|皿|セット|羽|人|件|行|列|機|品|m|mm|cm|km|g|kg|t|px|dot|pt|em|b|mb|kb|gb)
}}}

- (参考) [[単位(ソース→/core/src/nako_lex_rules.mts):https://github.com/kujirahand/nadesiko3/blob/25b8c12defff1cb04ea6fbf30d1f906ca644d5cc/core/src/nako_lex_rules.mts#L19]]

プログラムの中の数値に単位を付けて記述できます。

{{{#nako3(rows=9)
# 単位をつけて数値を記述
リンゴは100個
値段は150円
リンゴ×値段を表示 # → 15000

# 計算式にも単位を指定可能
100歳×5人を表示 # → 500
}}}


▲特別な意味を持つ数値について

100pxや1.5emなど、HTMLの中でスタイルを指定する数値があります。この数値は、文字列に変換されて関数に与えられます。([[詳細 #1811:https://github.com/kujirahand/nadesiko3/issues/1811]])

{{{
(px|em|ex|rem|vw|vh|vmin|vmax)
}}}

- (参考) [[特別な単位(ソース→/core/src/nako_lex_rules.mts):https://github.com/kujirahand/nadesiko3/blob/25b8c12defff1cb04ea6fbf30d1f906ca644d5cc/core/src/nako_lex_rules.mts#L21C29-L21C57]]

単位pxやemなどは、HTMLを操作するのに便利です。

{{{#nako3(rows=7)
# --- 文字サイズの指定なし
L1=「心配事があると心が沈むが」のラベル作成。
改行作成。
# --- 文字サイズを指定する
L2=「良い言葉によって心が晴れる」のラベル作成。
L2$文字サイズ＝32px
}}}

●巨大な数値を表現する多倍長整数計算(BigInt記法)

BigIntが実装されました。以下のように数値の後ろに「n」を記述すると多倍長整数計算が可能になります。[[詳細 #1448:https://github.com/kujirahand/nadesiko3/issues/1448]]

- 123n
- 0x1ABCn
- 0o777n 
- 0b1011100n

次のように記述できます。

{{{#nako3
12345678901234567890123n*3nを表示
a=12345678901234567890123n
a*3nを表示
}}}

ただし、以下のような、bigint 同士ではない計算はできません。(これは JS の仕様を引き継いだものとなっています。)

{{{#nako3
# (注意) エラーが表示されます
12345678901234567890123n * 3 を表示
# 以下のように必ずBigInt記法同士で指定する
12345678901234567890123n * 3n を表示
}}}

▲PIについて

PIは定数として定義されています。

{{{#nako3
3.14を表示
PIを表示。
}}}

▲参考

・[[文法]]
・[[文法/計算]]
