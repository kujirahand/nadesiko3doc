■なでしこ3 DNCL互換実行モード(ver2)について

大学入試のセンター試験で利用される仮想的なプログラミング言語に「センター試験用手順記述標準言語(DNCL)」があります。

なでしことDNCLは同じ日本語をベースとしたプログラミング言語であり、文法も非常に似ています。しかし微妙なところで違いがありました。そこで、なでしこにDNCL互換モードが実装されました。

DNCLから、なでしこ3の豊富な命令([[こちら:https://nadesi.com/v3/doc/go.php?1033]])を使えるので非常に便利です。

▲DNCLのバージョンについて

なお、DNCLには公式にアナウンスされているver1と、いまだ具体的な仕様はないものの将来的に採用が決まっているver2の二つがあります。ver1は説明的な構文を採用しており、ver2はPythonに似た仕様となっています。

本ページでは、ver2について解説します。[[ver1:文法/DNCLモードについて]]についてはこちらをご覧ください。

ver1は非常に説明的でプログラムを書くのには向いていないと思っていましたが、ver2はインデントによるブロック構文を採用し、シンプルで実際にプログラムを書くのにも使えます。

▲サンプルプログラム

- [[DNCLモード(ver2)を使ったプログラムの一覧:https://n3s.nadesi.com/index.php?search_word=DNCL2&action=search&target=normal]]⭐

▲なでしこ3とDNCLの使い分け

まずは、なでしこ3のノーマルモードでいろいろなプログラム製作を楽しんでください。そして、入試対策が必要になったら問題読解の学習でDNCLモードを使うと良いでしょう。

▲なでしこ3でDNCL2を使う方法

プログラムの冒頭に「!DNCL2」と書いてください。DNCL ver2の互換モードで動かすことができます。以下は、DNCL2で1から10まで足した合計を求めるプログラムです。

{{{#nako3(rows=7)
!DNCL2
c=0
iを1から10まで1ずつ増やしながら繰り返す：
　　表示する(i)
　　c=c+i
表示する("1から10まで順に足すと", c, "です")
}}}

●DNCLについて

▲DNCL ver2 について

以下の令和７年度大学入学共通テスト「情報」の試作問題、サンプル問題に登場します。

- [[(PDF)「情報」試作問題:https://www.ipsj.or.jp/education/9faeag0000012a50-att/sanko2.pdf]]
- [[(PDF)「情報」サンプル問題:https://www.dnc.ac.jp/albums/abm.php?f=abm00040342.pdf&n=12_%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E5%95%8F%E9%A1%8C%E3%80%8E%E6%83%85%E5%A0%B1%E3%80%8F%E3%80%80%E5%95%8F%E9%A1%8C.pdf]]

●なでしこのDNCLモードについての補足

なでしこをDNCL2互換モードにするためには、プログラムの冒頭に「!DNCL2」と記述します。これにより、なでしこがDNCLに沿った動作になるように調整が行われます。

具体的には、なでしこが次のような動作となります。

・（1）配列変数のインデックス番号が``0起点``となります。(DNCL ver1と異なります)
・（2）二次元配列変数のインデックスの指定順序が逆さまになりません。(DNCL ver1と異なります)
・（3）配列変数の初期化が自動的に行われるようになります。
・（4）DNCLの「もし」文、「繰り返し」文、「＊の間」文が利用可能になります。

●DNCL2の利用例

では、具体的に使ってみましょう。プログラムの冒頭に『!DNCL2』と記述してください。

{{{#nako3(rows=3)
!DNCL2
kosu=100
表示する(kosu, "個見つかった")
}}}

以下はDNCLで同じプログラムを書いたものです。

{{{#nako3(rows=3)
!DNCLモード
kosu ← 100
kosuと"個見つかった"を表示
}}}

▲もし文

DNCLモードでは「もし」文などの制御構文が、DNCLの「もし」文となります。

{{{#nako3(rows=7)
!DNCL2
x=3
もし、x≧2ならば:
　　表示する("xは2以上")
そうでなければ:
　　表示する("xは2未満")
}}}

▲繰り返す文

{{{#nako3(rows=5)
!DNCL2
c=0
iを1から10まで1ずつ増やしながら繰り返す:
　　c=c+i
表示する("1から10を順に足すと", c)
}}}

{{{#nako3(rows=3)
!DNCL2
iを3から1まで1ずつ減らしながら繰り返す:
　　表示する("i=", i)
}}}

▲間繰り返す文

{{{#nako3(rows=5)
!DNCL2
A=3
(A > 0)の間繰り返す：
　　表示する("A=", A)
　　A=A-1
}}}

▲(暫定) 関数定義について

DNCL2には関数定義の例が存在しないため、暫定的に下記のような書式で関数を定義できます。「関数の＊＊＊を・・・と定義する」と記述して、関数を定義できます。

{{{#nako3(rows=5)
!DNCL2
関数の点数評価（tensu）を
　　もし tensu >=85 ならば：
　　　　表示する（"勝って見の緒を締めよ"）
　　そうでなく、もし 85 > tensu and tensu >65ならば：
　　　　表示する（"ドンマイ：気持ちを切り替えよう。"）
　　そうでなければ：
　　　　表示する（"自分のこれからと真剣に向き合おう"）
と定義する
tensu = 60
点数評価（tensu）
}}}


●注意点

- なでしこ3のDNCL互換モードは、なでしこの基本構文を、DNCLに合わせて動くよう調整したものです。仮想的な言語であるDNCLの全てのソースコードが動くわけではありません。
- 明らかな問題があれば、[[こちら:https://nadesi.com/cgi/kaizen3/]]までご報告ください。
