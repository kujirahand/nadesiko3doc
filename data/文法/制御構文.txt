■制御構文について

なでしこ３では、プログラムの流れを制御する、さまざまな制御構文を記述することができます。

{{{#column
【互換性のメモ】
なでしこ１では、インデントによって、制御ブロックを表現していました。なでしこ３では、ブロックの末尾に「ここまで」と記述するように仕様が変更されました。なでしこ1と同じインデント構文を利用したい場合は、プログラム冒頭に「!インデント構文」と記入してください。詳しくは『[[文法/インデント構文]]』をご覧ください。
}}}

●条件分岐の「もし」文

処理を分岐させるときは「もし」文を利用します。

{{{
[書式]
もし、(比較式)ならば
　　# ここに真のときの処理
違えば
　　# ここに偽のときの処理
ここまで
}}}

比較式は、次のような不等号を記述した式です。

| 比較式 | 意味 
| a = b | aとbが等しいか
| a > b | aがbより大きいか
| a >= b または a ≧ b | aがb以上か
| a < b | aがbより小さいか
| a <= b または a ≦ b | aがb以下か
| a <> b または a ≠ b| aとbが異なるか

利用例を見てみましょう。

{{{#nako3
A=5
もし、A=5ならば
  「OK」と表示
違えば
  「NG」と表示
ここまで。
}}}

この時「違えば」のブロックは省略できます。

{{{#nako3
A=5
もし、Aが５ならば
　　「OK」と表示
ここまで
}}}


▲もしの単文について

また、条件分岐の処理が一文(句点や改行まで)で記述できる場合には、「ここまで」を省略することができます。

{{{#nako3(rows=2)
A=5
もし、Aが５ならば、「OK」と表示。
}}}

▲『もし、AがBならば』構文

また、「もし」構文の中では「もしAがBならば」と書くと「もし、(A=B)ならば」と書くのと同じ意味になります。

{{{#nako3(rows=7)
A=５
もし、Aが５ならば
　　「Aは５です」と表示。
違えば
　　「Aは５以外です」と表示。
ここまで
}}}

▲『もし、(比較式)でなければ』構文

また、比較式の否定形「もし...でなければ」あるいは「もし...なければ」書くと「もし、!(比較式)ならば」と書くのと同じ意味になります。

{{{#nako3(rows=7)
A=５
もし、Aが3でなければ
　　「OK」と表示。
違えば
　　「NG」と表示。
ここまで
}}}


●繰り返しの「回」文

回数を指定して、複数回プログラムを繰り返すことができます。

{{{#nako3
3回、ここから
　　「こんにちは」と表示。
ここまで。
}}}

「ここから」は省略できます。

{{{#nako3
3回
　　「こんにちは」と表示
ここまで
}}}

回数に変数を指定したい場合は「(変数)回」のように、カッコで囲います。

{{{#nako3
N=3
(N)回
　　「やぁ。」と表示。
ここまで。
}}}

繰り返しの何回目かを知りたい場合は、変数『回数』を参照します。

{{{#nako3
N=3
(N)回
　　「やぁ、{回数}回目」と表示。
ここまで。
}}}


●「繰り返し」文について

ループカウンタとなる変数を利用して、繰り返しを行うことができます。（「ここから」は省略できます。）

{{{#nako3
Nで３から５まで繰り返す、ここから
　　Nを表示
ここまで
}}}

●条件繰り返し「(条件)の間」文

特定の条件が真の場合に、繰り返す「(条件)の間」文があります。（「ここから」は省略できます。）

{{{#nako3
A=1
(A<=5)の間、ここから
　　Aを表示
　　A=A+1
ここまで
}}}



●「反復」文について

配列などを一要素ずつ、反復実行します。（「ここから」は省略できます。）

{{{#nako3
[1,2,3]を反復、ここから
　　対象を表示。
ここまで。
}}}

・（参考）[[反復について]]


●条件分岐構文

条件分岐構文は、一つの値を複数に分岐するときに使います。

{{{#nako3(rows=7)
N=2
Nで条件分岐
　　1ならば、「1」と表示💧
　　2ならば、「2」と表示💧
　　3ならば、「3」と表示💧
　　違えば、「@」と表示💧
ここまで。
}}}

▲「ここまで」＝「💧（しずく）」

「ここまで」と書くとプログラムが見づらくなるとき、「ここまで」の代わりに「💧（しずく）」と書くことができます。「💧（しずく）」は「ここまで」と同じ意味です。

「💧」は各種IMEで「しずく」と入力すると変換できます。

ただし「💧」を多用すると逆に見づらくなってしまうので、「ここまで」と「💧」をうまく使い分けると良いでしょう。

加えて「ここまで」を入力するのが大変と思ったときには『[[!インデント構文:文法/インデント構文]]』も利用できます。

●関連事項

・[[文法]]
・[[文法/反復]]
・[[文法/インデント構文]]

