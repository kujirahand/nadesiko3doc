■制御構文について

なでしこ３では、プログラムの流れを制御する、さまざまな制御構文を記述することができます。

{{{#column
【互換性のメモ】
・なでしこ１では、インデントによって制御ブロックを表現していました。なでしこ３ではブロックの末尾に「ここまで」と記述するように仕様が変更されました。
・なでしこ1と同じインデント構文を利用したい場合は、プログラム冒頭に「!インデント構文」と記入してください。詳しくは『[[文法/インデント構文]]』をご覧ください。
}}}

●条件分岐「もし」文

「もし」文を使うと条件式を指定して、正しいとき、正しくないときで処理を分岐できます。

{{{#nako3
天気＝「晴れ」
もし、天気が「晴れ」ならば
　　「遠足に行く」と表示。
違えば
　　「教室で自習」と表示。
ここまで。
}}}

・詳しくは、[[文法/もし]]をご覧ください。

●繰り返しの「回」文

回数を指定して、複数回プログラムを繰り返すことができます。

{{{#nako3
3回
　　「こんにちは」と表示。
ここまで。
}}}

・詳しくは[[文法/回]]を参照してください。

●「繰り返し」文について

ループカウンタとなる変数を利用して指定回数の繰り返しを行うことができます。

{{{#nako3
Nで３から５まで繰り返す
　　Nを表示
ここまで
}}}

・詳しくは[[文法/繰返]]を参照してください。


●条件繰り返し「(条件)の間」文

特定の条件が真の場合に、繰り返す「(条件)の間」文があります。（「ここから」は省略できます。）

{{{#nako3
A=1
Aが５以下の間
　　Aを表示
　　A=A+1
ここまで
}}}

・詳しくは[[文法/繰返]]を参照してください。

●「反復」文について

配列などを一要素ずつ反復実行します。

{{{#nako3
[1,2,3]を反復
　　対象を表示。
ここまで。
}}}

・詳しくは[[文法/反復]]を参照してください。


●条件分岐構文

条件分岐構文は、一つの値をもとに複数に処理を分岐するときに使います。

{{{#nako3(rows=7)
N=2
Nで条件分岐
　　1ならば、「1」と表示💧
　　2ならば、「2」と表示💧
　　3ならば、「3」と表示💧
　　違えば、「@」と表示💧
ここまで。
}}}

・なお「ここまで」＝「💧（しずく）」です。[[文法/💧]]もご覧ください。
・詳しくは[[文法/条件分岐]]をご覧ください。


●関連事項

・[[文法]]
・[[文法/インデント構文]]

