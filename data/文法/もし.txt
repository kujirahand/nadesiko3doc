■ [[文法/制御構文]] / もし

●条件分岐の「もし」文

処理を分岐させるときは「もし」文を利用します。

{{{
[書式]
もし、(比較式)ならば
　　# ここに真のときの処理
違えば
　　# ここに偽のときの処理
ここまで
}}}

比較式は、次のような不等号を記述した式です。

| 比較式 | 意味 
| a = b | aとbが等しいか
| a > b | aがbより大きいか
| a >= b または a ≧ b | aがb以上か
| a < b | aがbより小さいか
| a <= b または a ≦ b | aがb以下か
| a <> b または a ≠ b| aとbが異なるか

利用例を見てみましょう。

{{{#nako3
A=5
もし、A=5ならば
  「OK」と表示
違えば
  「NG」と表示
ここまで。
}}}

この時「違えば」のブロックは省略できます。

{{{#nako3
A=5
もし、Aが５ならば
　　「OK」と表示
ここまで
}}}


▲もしの単文について

また、条件分岐の処理が一文(句点や改行まで)で記述できる場合には、「ここまで」を省略することができます。

{{{
[書式]
もし、(比較式)ならば、＊＊＊。
}}}

簡単な使い方は以下のようになります。

{{{#nako3(rows=2)
A=5
もし、Aが５ならば、「OK」と表示。
}}}

{{{#column
v3.2.27以前では単文の「違えば」文も記述できますが、将来的には廃止予定です。([[提案1:https://github.com/kujirahand/nadesiko3/issues/1091]] / [[作業:https://github.com/kujirahand/nadesiko3/issues/1099]])
}}}

▲『もし、AがBならば』構文

また、「もし」構文の中では「もしAがBならば」と書くと「もし、(A=B)ならば」と書くのと同じ意味になります。ただし、この記述方法は、「もしAが30ならば」とか「もしBが100ならば」とか、最も簡単な比較の時のみ使えます。（というのも、関数呼び出しと区別がつかなくなってしまう可能性が高くなってしまうので。）

{{{#nako3(rows=7)
A=５
もし、Aが５ならば
　　「Aは５です」と表示。
違えば
　　「Aは５以外です」と表示。
ここまで
}}}

もし、複数の条件を「（式A）かつ（式B）」や、「（式A）または（式B）」のように並べて記述したい場合、比較式を記述する際、（比較式）のようにカッコで括る必要があります。

{{{#nako3
# 比較式を複数記述したい場合はカッコで括ってください
A=5
もし(A%3＝0)または(A%5＝0)ならば
　　「3の倍数または5の倍数」と表示。
ここまで。
}}}

「かつ」や「または」を利用しつつ、不等号を使わないで比較するには「AがBと等しい」関数を使うと良いでしょう。

{{{#nako3
# 比較式を複数記述したい場合はカッコで括ってください
A=5
もし((A%3)が0と等しい)または((A%5)が0と等しい)ならば
　　「3の倍数または5の倍数」と表示。
ここまで。
}}}



▲『もし、(比較式)でなければ』構文

また、比較式の否定形「もし...でなければ」あるいは「もし...なければ」書くと「もし、!(比較式)ならば」と書くのと同じ意味になります。

{{{#nako3(rows=7)
A=５
もし、Aが3でなければ
　　「OK」と表示。
違えば
　　「NG」と表示。
ここまで
}}}

▲「もし」が連続する場合

{{{#nako3
N=3
もし、Nが1ならば
　　「N=1」と表示
違えば、もし、Nが2ならば
　　「N=2」と表示
違えば、もし、Nが3ならば
　　「N=3」と表示
違えば
　　「その他」と表示
ここまで。
}}}

●「もしそうならば...」「もしそうでなければ...」

条件判定を書いた後、「もしそうならば」「もしそうでなければ」を記述できます。

{{{#nako3
A=3
Aが3以上。もしそうならば「3以上」と表示。
もしそうでなければ「3未満」と表示。
}}}


●参考
・[[文法/制御構文]]

