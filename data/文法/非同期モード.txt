■非同期モードについて

{{{#column
``【重要】``
v3.2.44以降で利用が非推奨になり、2024年3月のバージョン3.5.1で完全に廃止されました。
代わりに、非同期専用命令を使ってください。
[[→詳しい情報:https://github.com/kujirahand/nadesiko3/issues/1164]]
}}}

非同期モードを使うと、なでしこのプログラムを完全に非同期で実行できます。非同期モードを使うには、「!非同期モード」とプログラムの先頭に記述します。

> (メモ) また、なでしこ簡易エディタや貯蔵庫を使わないでHTMLでなでしこを使う場合には、「<script src="/<path>/nako_gen_async.js">」の宣言を追加してください。

非同期モードでは、以下のように「N秒待機」や「AJAX受信」が使えます。

{{{#nako3(rows=9)
!非同期モード
3回繰り返す
　　「泣くのに時があり」と表示。
　　1秒待機
　　「笑うのに時があり」と表示。
　　1秒待機
　　「踊るのに時がある」と表示。
ここまで。
}}}

非同期モードのポイントは、敢えてコールバック関数や逐次実行の構文を使う必要がありません。自然にプログラムを記述できます。

{{{#nako3(rows=9)
!非同期モード
API=「https://api.aoikujira.com/time/get.php」
3回
　　「時間を取得します」と表示。
　　APIからAJAX受信。
　　対象を表示。
　　1秒待機
ここまで。
}}}

> 【メモ】現在、処理速度を稼ぐために、「N秒待機」を記述してはじめて、ブラウザのアイドル処理を経由します。

●非同期モードに対応している関数

非同期モードに対応している関数は次の通りです。

- [[plugin_system/秒待機]]
- [[plugin_browser/AJAX受信]]

●非同期モードの欠点

非同期モードは、なでしこのプログラムを直接ブラウザで実行できるJavaScriptに変換するのではなく、擬似的なバイトコードに変化して一行ずつ実行する方式に変換します。そのため、実行速度はかなり低下します。

【実行速度の比較】:

{{{#csv
モード, FIB35の計算, FIB40の計算
同期モード,0.3, 2.7
非同期モード,2.9, 37.8
}}}

{{{#nako3
### 参考 ### 以下をcnako3で実行して比較したところ
!非同期モード

●FIB(N)とは
　　もし、N<=2ならば、(N-1)で戻る
　　#「FIB={N}」を表示
　　V=FIB(N-1)+FIB(N-2)
　　それはV
ここまで

FIB(35)を表示
}}}

このように、非同期モードは圧倒的に動作が遅いのですが、上から下へと実行できるプログラムを記述できます。

▲参考
- [[文法]]
- [[文法/逐次実行]]

