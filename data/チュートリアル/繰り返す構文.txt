■[[チュートリアル]] / 繰り返す構文

- [[前のページ:チュートリアル/条件分岐構文]]

●繰り返す構文

プログラムで同じことを何度も繰り返すときには『？回～』構文や『繰り返す』構文を使います。	

プログラムを作るとき、何度も同じことを実行したいときがあります。例えば、５回、「ワン」と表示するプログラムを作ってみます。	

{{{#nako3
「ワン」と表示。
「ワン」と表示。
「ワン」と表示。
「ワン」と表示。
「ワン」と表示。
}}}

これを実行すると、「ワン」と５回表示されます。ただ、これだと、何度も同じコトを書く必要があります。同じプログラムを何度も書いているので冗長ですね。

そこで『N回』構文を使うと、これを省略して書くことができます。	以下のように一文で記述できます。

{{{#nako3
５回「ワン」と表示する。
}}}

あるいは以下のように記述できます。

{{{#nako3
５回繰り返す
　　「ワン」と表示。
ここまで。
}}}

これを実行すると、先と同じように５回「ワン」と表示されます。さっきは５回だったので、まだコピーして貼り付けてを繰り返せば手作業でもできますが、これが１００回だったらどうでしょう？非常に面倒ですね。この『N回』文の書き方を覚えれば楽になりますね。	

●本当に繰り返すのか検証する	

ところで「これって、千回でも１万回でも繰り返してくれるんですか？」って思いませんでしたか。

もちろんです。それでは、１から１万までを、１＋２＋３＋４＋５＋...と足し算するプログラムを作ってみます。	

{{{#nako3
結果は０
数は１
10000回繰り返す
　　結果は、結果＋数
　　数は、数＋１
ここまで。
結果を表示。
}}}

プログラムを実行すると、50005000が表示されます。これって合ってるんですか？それでは、答えを確かめるために、計算機で、１から１万まで足して確認してください！！って・・・本当に足す人はいないと思いますが・・・

計算機で足さなくても、1+10000, 2+9999, 3+9998 ... の組み合わせが5000個あると考えると、以下の方法で答えを見つける方法もあります。	

{{{#nako3
最後は、10000
結果は、（１＋最後）×最後÷２
結果を表示。
}}}

プログラムを実行すると、50005000が表示されます。良かった！本当に１万回足してくれるということなんですね。	

●『回数』変数をチェックする	

何回も繰り返しているとき、その繰り返し回数が何回目か知りたい場合もあります。そのときは、変数「回数」をチェックすると何回目の繰り返しかを調べることができます。	

{{{#nako3
１０回繰り返す
　　「｛回数｝回目です。」と表示。
ここまで。
}}}

これを実行すると、下のように表示されます。

{{{
1回目です
2回目です
...
9回目です
10回目です	
}}}

●『繰り返す』構文を使う	

回数を覚えると、３から８まで、６から２０までと、実行したい場合があります。その場合は、『繰り返す』構文を使います。

回数の変わりに、カウンタ変数に指定した変数を利用して回数を知ることができます。以下が『繰り返す』構文の書式です。

{{{
（カウンタ変数）を（開始値）から（終了値）まで繰り返す
　　＃ここに繰り返すプログラム
ここまで。
}}}

『繰り返す』文を使うと、１から１万まで繰り返すプログラムを書くと以下のようになります。	

{{{#nako3
結果は、０
数を１から10000まで繰り返す
　　　結果は、結果＋数
ここまで。
結果を表示。	
}}}

実行した結果は、先ほどと同じように、50005000 が表示されます。	『繰り返す』構文を使うと開始値と終了値が指定できて『N回』構文より便利なんですね。

●次へ進もう

・[[チュートリアル/配列変数]]

