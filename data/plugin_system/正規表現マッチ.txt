●『[[正規表現マッチ:plugin_system/正規表現マッチ]]』の詳しい解説

文字列Aを正規表現パターンBでマッチして結果を返す(パターンBは「/pat/opt」の形式で指定。optにgの指定がなければ部分マッチが『抽出文字列』に入る)

▲利用例

{{{#nako3
「111-2222-33FF」を「/^(\d+)\-(\d+)\-([0-9A-Fa-f]+)/」で正規表現マッチ。
それを表示。
抽出文字列[0]を表示。
抽出文字列[1]を表示。
抽出文字列[2]を表示。
}}}

▲ｖ３には「全角か判定」「英字か判定」が未実装なので、正規表現マッチを使ってなんとかする例
{{{#nako3(rows=10)
＃文字列Sの一文字目が全角かどうか判定して返す。
●全角判定(Sが|Sの|Sを)
　　Sを「^[\u0020-\u007E\uFF61-\uFF9F]」で正規表現マッチ。
　　もし、それがnullならば、はいで戻る。
　　違えば、いいえで戻る。
ここまで。

「abc」が全角か判定して表示。
「ａｂｃ」が全角か判定して表示。
「いろは」が全角か判定して表示。
}}}
{{{#nako3(rows=10)
＃文字列Sの一文字目がアルファベットか判定して返す。
●英字判定(Sが|Sの|Sを)
　　Sを「^[A-Za-zＡ-Ｚａ-ｚ]」で正規表現マッチ。
　　もし、それがnullならば、いいえで戻る。
　　違えば、はいで戻る。
ここまで。

「abc」が英字か判定して表示。
「ａｂｃ」が英字か判定して表示。
「いろは」が英字か判定して表示。
}}}
{{{#nako3(rows=10)
＃漢字か判定も欲しい！
●漢字判定(Sが|Sの|Sを)
　　Sを「^[\u3005\u3007\u4E00-\u9FFF\uF900-\uFAFF\u3400-\u4DFF]|[\uD840-\uD87F][\uDC00-\uDFFF]」で正規表現マッチ。
　　もし、それがnullならば、いいえで戻る。
　　違えば、はいで戻る。
ここまで。

「いろはにほへと」が漢字か判定して表示。
「色は匂へど」が漢字か判定して表示。
}}}

▲関連

- [[plugin_system/正規表現置換]]

