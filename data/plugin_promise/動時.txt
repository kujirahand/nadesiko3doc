●『[[動時:plugin_promise/動時]]』の詳しい解説

引数を2個とる関数を受け取り、非同期処理オブジェクト ([[Promise:https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise]]) を作成して返します。
非同期処理の中身となる関数では、処理の終了時、その成否に応じて以下を行います。
- 成功した場合は、第1引数として渡される関数にデータを渡して呼び出します。
- 失敗した場合は、第2引数として渡される関数に理由を渡して呼び出します。

▲利用例

{{{#nako3(rows=25)
# 関数Fに引数A(配列で指定)を渡して実行する関数を作成する
●(FにAの)引数記録とは
  「(f,a)=>(()=>f(...a))」を[F,A]でJS関数実行して戻す。
ここまで。

●非同期処理サンプル(RESOLVE,REJECT)とは
  定数の成功処理は、RESOLVEに["成功！"]の引数記録。
  「成功」のボタン作成。
  成功処理でそれをクリックした時。
  定数の失敗処理は、REJECTに["失敗！"]の引数記録。
  「失敗」のボタン作成。
  失敗処理でそれをクリックした時。
  改行作成。
ここまで。

処理は{関数}非同期処理サンプルで動く時。

処理が成功した時には
  「やったね！{対象}」を表示。
ここまで。

処理が失敗した時には
  「残念！{対象}」を表示。
ここまで。
}}}

▲参考
- [[そ:plugin_promise/そ]]
- [[成功時:plugin_promise/成功時]]
- [[失敗時:plugin_promise/失敗時]]
- [[処理時:plugin_promise/処理時]]
- [[終了時:plugin_promise/終了時]]
- [[束:plugin_promise/束]]
