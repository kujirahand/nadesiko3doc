テキストSを指定して、現在指定されているフォントやサイズが考慮された描画幅を取得します。
取得すると、TextMetricsオブジェクトが返ります。
実際の文字幅は、プロパティ["width"]を指定する必要があるので注意。

▲利用例
{{{#nako3(canvas,size=310x150,rows=12) 
描画x＝20。描画y＝40。文字幅＝0。

#文字を描画
24に描画フォント設定。
「撫子」を[描画x,描画y]へ文字描画。

#文字幅を取得し、次の描画位置へ反映
文字幅＝「撫子」の文字描画幅取得。
描画x＝描画x＋文字幅["width"]。

#サイズを変えて文字描画
12に描画フォント設定。
「（なでしこ）」を[描画x,描画y]へ文字描画。
}}}

▲文字幅取得と文字高さ取得
文字の高さも取得出来ます。
使いやすいようv1互換っぽい命令にしてみました。
{{{#nako3(canvas,size=310x150,rows=15) 
●(Sの)文字幅取得
　　TM＝Sの文字描画幅取得。
　　TM["width"]で戻る。
ここまで。

●(Sの)文字高さ取得
　　TM＝Sの文字描画幅取得。
　　TM["actualBoundingBoxAscent"]+TM["actualBoundingBoxDescent"]で戻る。
ここまで。

＃以下はテスト
「bold 24px Aria」に描画フォント設定。
描画文字＝「なでしこ」
描画文字の文字幅取得して表示。
描画文字の文字高さ取得して表示。

x=0。y=描画文字の文字高さ取得。
3回
　　[x,y]へ描画文字を文字描画。
　　x＝x+(描画文字の文字幅取得)。
ここまで。

x=((描画文字の文字幅取得)*3/2-(「撫子」の文字幅取得)/2)。
y=y+(描画文字の文字高さ取得)。
[x,y]へ「撫子」を文字描画。
}}}

▲参考
TextMetricsオブジェクトのプロパティは以下の通りです。
- width … 文字列の幅。
- actualBoundingBoxLeft … 基準点から左枠までの距離。
- actualBoundingBoxRight … 基準点から右枠までの距離。
- actualBoundingBoxAscent … 基準点から上枠までの距離。
- actualBoundingBoxDescent … 基準点から下枠までの距離。

▲関連
- [[plugin_browser/文字描画]]
- [[plugin_browser/描画フォント設定]]