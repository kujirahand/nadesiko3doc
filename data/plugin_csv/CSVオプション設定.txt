●『[[CSVオプション設定:plugin_csv/CSVオプション設定]]』の詳しい解説

CSVやTSVの処理を行う際のオプションをオブジェクトで指定します。

▲設定項目

#htmlshow(<h4>delimiter</h4>)

内部で用いるオプションです。
CSVやTSVの処理を行う際に内部で自動的に設定されるため、この命令で設定しても意味はありません。

#htmlshow(<h4>区切文字</h4>)

「delimiter」の別名です。

#htmlshow(<h4>eol</h4>)

二次元配列からCSVやTSVへの変換を行う際、改行をここで指定した文字列に置換して出力します。
行の区切りを表す改行だけではなく、セルのデータの文字列内の改行も置換の対象になります。

CSVやTSVから二次元配列への変換を行う際には、無視されます。(ここで指定した文字列を改行とみなしての変換は行いません)

#htmlshow(<h4>auto_convert_number</h4>)

真にすると、CSVやTSVから二次元配列への変換を行う際、数値を表していると思われるセルは数値に変換します。
偽にすると、文字列のまま変換します。

▲利用例

数値への変換を行うかどうかを切り替えます。

{{{#nako3
{auto_convert_number: 真}でCSVオプション設定。
「a,123,b」をCSV取得してJSONエンコードして表示。 # [["a",123,"b"]]
{auto_convert_number: 偽}でCSVオプション設定。
「a,123,b」をCSV取得してJSONエンコードして表示。 # [["a","123","b"]]
}}}

eolを改行でない文字列に設定すると、CSVやTSVに変換したデータの逆変換が難しくなります。

{{{#nako3
{eol: "⏎"}でCSVオプション設定。
CSVデータは[["a","b"],["c","d"]]。
CSV文字列はCSVデータを表CSV変換。
CSVデータをJSONエンコードして表示。 # [["a","b"],["c","d"]]
CSV文字列をJSONエンコードして表示。 # "a,b⏎c,d⏎"
CSV文字列をCSV取得してJSONエンコードして表示。 # [["a","b⏎c","d⏎"]]
}}}

一度に複数のオプションを設定できます。

{{{#nako3
{
  eol: "⏎",
  auto_convert_number: 偽,
}でCSVオプション設定。
データは『a,123,b
c,d,e』をCSV取得。
データをJSONエンコードして表示。 # [["a","123","b"],["c","d","e"]]
データを表CSV変換して表示。 # a,123,b⏎c,d,e⏎
}}}

▲注意点

この命令で設定したオプションは、簡易エディタの「実行」や「クリア」によってリセットされず、前に設定した値が維持されます。
確実に意図通りの処理を行うためには、デフォルト値を仮定せず、必ずCSVやTSVの処理を行う前にオプションを設定するとよいでしょう。

▲参考

- [[plugin_csv/CSV取得]]
- [[plugin_csv/TSV取得]]
- [[plugin_csv/表CSV変換]]
- [[plugin_csv/表TSV変換]]
