#
# command.txt を読んでDBに入れる
#
!「../../nadesiko3-sqlite3sync/nadesiko3-sqlite3sync.js」を取り込む。
# パスの解決
ROOT = 母艦パスを「../../」で相対パス展開
NADESIKO3 = ROOT&「/nadesiko3」
NADESIKO3DOC = ROOT&「/nadesiko3doc」
元ファイル = 「{NADESIKO3}/batch/command.txt」
WIKIフォルダ = 「{NADESIKO3DOC}/data」
DBFILE=「{WIKIフォルダ}/nako3commands.db」
もし、DBFILEが存在するならば # DBは常にゼロから作り直す
　　「ファイル削除」と表示
　　DBFILEをファイル削除。
ここまで。
「*** DBFILE: 」&DBFILEを表示
DBFILEをSQLITE3開く。
拡張=""

# ファイルのチェック
もし(元ファイルが存在)ならば
　　「読む: command.txt」と表示。
違えば
　　「エラー: 存在しません: {元ファイル}」と表示して終わる。
ここまで。

SQL_CREATE=「
/* コマンド一覧 */
CREATE TABLE IF NOT EXISTS commands (
  command_id INTEGER PRIMARY KEY,
  pagename TEXT NOT NULL,
  plugin TEXT,
  genre TEXT,
  name TEXT,
  type TEXT,
  kana TEXT,
  args TEXT,
  desc TEXT,
  ctime INTEGER,
  mtime INTEGER
);
/* コマンド一覧のインデックス */
CREATE UNIQUE INDEX commands_index ON commands (pagename);
/* プラグインの説明 */
CREATE TABLE IF NOT EXISTS plugins (
  name TEXT NOT NULL,
  desc TEXT DEFAULT '',
  nakotype TEXT DEFAULT ''
);
/* プラグイン一覧のインデックス */
CREATE UNIQUE INDEX plugins_index ON plugins (name);
」

SQL_CREATEを「;」で区切って反復
　　対象&「;」を[]でSQLITE3実行。
ここまで。


# 変数の初期化
プラグイン名＝空。
プラグイン拡張=空。
表題＝空。
目次＝「」
SQL=「」
TPL=「」
WIKI=""
PLUG={}
PLUG2={}
PLUG3={}
PLUG拡張={}

プラグイン一覧＝[]
拡張プラグイン辞書={}
表題辞書={}
プラグインページ辞書={}

編集禁止メッセージ=「
#rem(★★★ 編集禁止 ★★★)
#rem(★このファイルはスクリプトで自動で生成されました。)
#rem(★なでしこ=v{ナデシコバージョン})
#rem(★生成={今日} {今})
#rem(★スクリプト=cmd2db.nako3)
」&改行。
命令一覧＝「
{編集禁止メッセージ}
■ [[命令一覧/機能順]]
なでしこ3の命令一覧です。
」

# メイン処理
元ファイルロード。
終わる。

●(SをFへ|Fに)WIKI保存とは
　　FF=「{WIKIフォルダ}/{F}」
　　P＝FFからパス抽出。
　　もし！(Pが存在）ならば
　　　　Pにフォルダ作成。
　　ここまで。
　　SをFFへ保存。
　　「保存: {FF}」を表示。
ここまで。

●元ファイルロードとは
　　プラグイン一覧＝[]
　　元ファイルを開いて、改行で区切る。
　　反復
　　　　対象を「/^■([a-zA-Z0-9\-\_]+)\s*\((.+?)\)/」で正規表現マッチ。
　　　　もし、そうならば
　　　　　　プラグイン名解析。
　　　　　　続ける。
　　　　ここまで。
　　　　対象を「/^●(.+)/」で正規表現マッチ。
　　　　もし、そうならば
　　　　　　プラグイン表題解析。
　　　　　　続ける。
　　　　ここまで。
　　　　対象を「/^\|(.+)/」で正規表現マッチ。
　　　　もし、そうならば
　　　　　　コマンド解析。
　　　　　　続ける。
　　　　ここまで。
　　ここまで。
ここまで。

●プラグイン名解析とは
　　プラグイン名は、抽出文字列[0]
　　拡張=抽出文字列[1]
　　拡張＝トリム（拡張）
　　SQL="INSERT INTO plugins (name,nakotype) VALUES (?,?)"
　　SQLを[プラグイン名, 拡張]でSQLITE3実行
　　拡張プラグイン辞書[プラグイン名] = 拡張。
　　プラグイン一覧にプラグイン名を配列追加。
　　＃命令一覧
　　プラグイン解説＝「」& _
　　　　「●[[{プラグイン名}]]{拡張}」&改行。
　　命令一覧＝命令一覧＆改行＆プラグイン解説。
　　＃プラグインページ辞書
　　プラグインページ辞書[プラグイン名]=プラグイン解説。
ここまで。

●プラグイン表題解析
　　表題は抽出文字列[0]
　　表題ページ名＝「{プラグイン名}/{表題}」
　　表題行＝「▲[[{プラグイン名}]] / [[{表題}:{表題ページ名}]]」
　　命令一覧＝命令一覧＆改行&表題行&改行。
　　表題辞書["{プラグイン名}/{表題}"] = 「●[[{プラグイン名}]]/[[{表題}:{プラグイン名}/{表題}]]」&改行。
　　プラグインページ辞書[プラグイン名]＝プラグインページ辞書[プラグイン名]＆表題行＆改行。
ここまで。

●コマンド解析
　　CMDは抽出文字列[0]
　　CMDを「|」で区切って、Cに代入。
　　Fタイプ＝トリム(C[0])
　　F名前＝トリム(C[1])
　　F引数＝トリム(C[2])の「/」を「|」に置換
　　F説明＝トリム(C[3])
　　Fヨミ＝トリム(C[4])
　　Fカナ1＝LEFT(ヨミ,1)
　　F拡張＝拡張プラグイン辞書[プラグイン名]
　　# エラーチェック - 表題とコマンドが同名はエラーに
　　もし、表題＝F名前ならば
　　　　「エラー：{プラグイン名}の『{表題}』とコマンドが同名です。」と表示。
　　　　終わる。
　　ここまで。
　　＃ページ名など
　　システム時間をVに代入。
　　"- {プラグイン名}/{F名前}"を表示。
　　DATA=[
      "{プラグイン名}/{F名前}",
      プラグイン名,
      表題,
      Fタイプ,
      F名前,
      F引数,
      F説明,
      Fヨミ,
      V,
      V
    ];
    #DATAをJSONエンコードして表示。
　　「INSERT INTO commands
      (pagename,plugin,genre,type,name,args,desc,kana,ctime,mtime)
VALUES(?,?,?,?,?,?,?,?,?,?)」をDATAでSQLITE3実行
　　ページ名＝「{プラグイン名}/{F名前}」
　　もし、Fタイプ＝「定数」ならば
　　　　FF=「- [[{F名前}:{ページ名}]] -- 定数{改行}」。
　　違えば
　　　　もし、F引数＝空ならば
　　　　　　FF=「- [[{F名前}:{ページ名}]] --- {F説明}」&改行
　　　　違えば
　　　　　　FF=「- [[({F引数}){F名前}:{ページ名}]] --- {F説明}」&改行
　　　　ここまで。
　　ここまで。
　　命令一覧＝命令一覧＆FF。
　　プラグインページ辞書[プラグイン名]=プラグインページ辞書[プラグイン名]&FF
ここまで。

